const CAR1 = {
    brand: "BMW",
    model: "M3",
    year: 2022,
    currentSpeed: 0,
    drive: () => {
        return this.currentSpeed += 20;
    }
}

//Instead of builiding each object, we can use constractor functions as following.


function Car(brand, model, year){
    this.brand = brand;
    this.model = model;
    this.year = year;
    this.currentSpeed = 0;

    this.drive = () => {
        return this.currentSpeed += 20;
    }
}

//It's a good practice to NOT use arrow funcs with objects.
//While using this with arrow funcs, it takses a global this that is out of the current scope.

const car1 = new Car("BMW", "M3", 2022);
const car2 = new Car("Mazda", "MX-5", 2020);

console.log(car1);
console.log(car1.drive());

//Class Task 1

function Book(title, category, author, pages){
    this.title = title;
    this.category = category;
    this.author = author;
    this.pages = pages;
    this.render = function render(){
        return null;
    }
}

const book1 = new Book("The Godfather", "Crime", "Mario Puzo", 433);
const book2 = new Book("Harry Potter", "Fantasy", "J.K Rolling", 766);
const book3 = new Book("The Godfather Returns", "Crime", "Mark Winegardner", 448)

const BOOKS_ARR = [book1, book2, book3];
console.log(BOOKS_ARR);